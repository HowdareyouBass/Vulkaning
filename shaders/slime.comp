#version 450

layout (local_size_x = 16, local_size_y = 16) in;

layout (rgba16f, set = 0, binding = 0) uniform image2D image;

layout (push_constant) uniform constants
{
    float delta_time;
} PushConstants;

struct Agent
{
    vec2 pos;
    float angle;
};

uint Hash(uint s)
{
    s ^= 2747636419u;
    s *= 2654435769u;
    s ^= s >> 16;
    s *= 2654435769u;
    s ^= s >> 16;
    s *= 2654435769u;
    return s;
}

float Random(uint seed)
{
    return float(Hash(seed)) / 4294967295.0; // 2^32-1
}

Agent[16] agents;
const float speed = 1;

void main()
{
    ivec2 texel_coord = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(image);
    int pixel_index = texel_coord.y * size.x + texel_coord.x;
    float flash_speed = 1.0;

    if (pixel_index < 16)
    {
        vec2 direction = vec2(cos(agents[pixel_index].angle), sin(agents[pixel_index].angle));
        vec2 new_pos = agents[pixel_index].pos + direction * PushConstants.delta_time * speed;
    }

    if (texel_coord.x < size.x && texel_coord.y < size.y)
    {
        float random = Random(pixel_index);
        // vec4 color = vec4(random.xxx, 1.0);

        vec4 color = vec4(PushConstants.delta_time.xxx, 1.0);

        imageStore(image, texel_coord, color);
    }

}
